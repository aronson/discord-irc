name: Publish Docker Image and Native Binaries

on:
  push:
    paths:
      - .github/workflows/build.yaml
      - lib/**
      - deno.*
      - Dockerfile
  release:
    types:
      - published

jobs:
  publish-docker:
    name: Publish Docker Image to GitHub Container Registry
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Extract metadata for container image
        uses: docker/metadata-action@v4
        id: metadata
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Build and publish container image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}

  publish-binaries:
    name: Publish Native Binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
    needs: publish-docker
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Compile binary
        run: deno task prepare

      - name: Compile ARM64 binary for macOS
        if: runner.os == 'macOS'
        run: deno task prepare --target aarch64-apple-darwin --output discord-irc-arm64

      - name: Compile ARM64 binary for Linux
        if: runner.os == 'Linux'
        run: |
          CONTAINER_ID=$(docker create ghcr.io/${{ github.repository }}:${{ github.ref_name }} --platform arm64)
          docker cp $CONTAINER_ID:/app/discord-irc discord-irc-arm64
          docker rm -v $CONTAINER_ID

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ runner.os }}
          path: ./discord-irc*
